replicate_data_biogas <- biogas[,4:15]
replicate_data_biogas
replicate_stability <- stability_per_period(replicate_data = replicate_data_biogas, period_length = 3)
source("C:/Users/marce/Documents/Repos/microbiome-help/microbiome_helper_functions.R")
replicate_stability <- stability_per_period(replicate_data = replicate_data_biogas, period_length = 3)
means2 <- sapply(replicate_stability, mean)
means2
plot(means2)
replicate_stability
source("C:/Users/marce/Documents/Repos/microbiome-help/microbiome_helper_functions.R")
replicate_stability <- stability_per_period(replicate_data = replicate_data_biogas, period_length = 3)
replicate_stability
replicate_stability <- stability_per_period(replicate_data = replicate_data_biogas, period_length = 3)
source("C:/Users/marce/Documents/Repos/microbiome-help/microbiome_helper_functions.R")
replicate_stability <- stability_per_period(replicate_data = replicate_data_biogas, period_length = 3)
View(replicate_stability)
replicate_stability
library("readxl")
library("tidyr")
library("ggplot2")
library("ggthemes")
library("dplyr")
source("C:/Users/marce/Documents/Repos/microbiome-help/microbiome_helper_functions.R")
biogas <- read_xlsx(path = "C:/Users/marce/OneDrive/Sci/DiversidadH2/Análisis/0_datos/alta_diversidad.xlsx", sheet = "biogas", range = "A68:O129")
colnames(biogas) <- c("tiempo", "fecha", "semana", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12")
head(biogas)
replicate_data_biogas <- biogas[,4:15]
replicate_data_biogas
means <- sapply(replicate_data_biogas, mean)
std_dev <- sapply(replicate_data_biogas, sd)
stability <- 1-(std_dev/means)
stability
mean(stability)
replicate_stability <- stability_per_period(replicate_data = replicate_data_biogas, period_length = 3)
replicate_stability
View(biogas)
View(biogas)
replicate_data_biogas
replicate_data_biogas[61]
replicate_data_biogas[61,]
mean(replicate_data_biogas[61,])
mean(replicate_data_biogas[61,0:12])
mean(replicate_data_biogas[61,])
replicate_data_biogas[61,]
t(replicate_data_biogas[61,])
mean(t(replicate_data_biogas[61,]))
biogas_invasion <- read_xlsx(path = "C:/Users/marce/OneDrive/DiversidadH2/0_datos/alta_diversidad.xlsx", sheet = "biogas_invasion", range = "A13:N22")
biogas_invasion <- select(biogas_invasion, "tiempo", ends_with("i"))[2:9,]
head(biogas_invasion)
biogas_invasion <- read_xlsx(path = "C:/Users/marce/OneDrive/Sci/DiversidadH2/Análisis/0_datos/alta_diversidad.xlsx", sheet = "biogas_invasion", range = "A13:N22")
biogas_invasion <- select(biogas_invasion, "tiempo", ends_with("i"))[2:9,]
head(biogas_invasion)
biogas_invasion[2:7]
biogas_invasion[1,2:7]
mean(t(biogas_invasion[1,2:7]))
mean(t(biogas_invasion[8,2:7]))
# Metabolites
####################################################################################
# Biogas
####################################################################################
biogas <- read_xlsx(path = "C:/Users/marce/OneDrive/Sci/DiversidadH2/Análisis/0_datos/baja_diversidad.xlsx", sheet = "biogas", range = "A36:O64")
colnames(biogas) <- c("tiempo", "fecha", "semana", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12")
head(biogas)
replicate_data_biogas <- biogas[,4:15]
replicate_data_biogas
replicate_data_biogas[29,]
replicate_data_biogas[28,]
mean(t(replicate_data_biogas[28,]))
biogas_invasion <- read_xlsx(path = "C:/Users/marce/OneDrive/Sci/DiversidadH2/Análisis/0_datos/baja_diversidad.xlsx", sheet = "biogas_invasion", range = "A13:N22")
biogas_invasion <- select(biogas_invasion, "tiempo", ends_with("i"))[2:9,]
head(biogas_invasion)
biogas_invasion[2;7]
biogas_invasion[2:7]
mean(t(biogas_invasion[1,2:7]))
mean(t(biogas_invasion[8,2:7]))
biogas_invasion <- read_xlsx(path = "C:/Users/marce/OneDrive/Sci/DiversidadH2/Análisis/0_datos/alta_diversidad.xlsx", sheet = "biogas_invasion", range = "A13:N22")
biogas_invasion <- select(biogas_invasion, "tiempo", ends_with("i"))[2:9,]
head(biogas_invasion)
replicate_data_biogas <- biogas[,2:]
replicate_data_biogas <- biogas[,2:7]
replicate_data_biogas
replicate_data_biogas <- biogas_invasion[,2:7]
replicate_data_biogas
replicate_stability <- stability_per_period(replicate_data = replicate_data_biogas, period_length = 3)
replicate_stability
means2 <- sapply(replicate_stability, mean)
means2
replicate_data_biogas <- biogas[,4:15]
replicate_data_biogas
means <- sapply(replicate_data_biogas, mean)
std_dev <- sapply(replicate_data_biogas, sd)
stability <- 1-(std_dev/means)
stability
mean(stability)
replicate_data_biogas[0:0,1:ncol(replicate_data_biogas)]
data.frame(means, std_dev, stability, row.names = colnames(replicate_data_biogas))
data.frame(means, std_dev, stability, row.names = colnames(replicate_data_biogas))
replicate_stability <- stability_per_period(replicate_data = replicate_data_biogas, period_length = 3)
replicate_stability
means2 <- sapply(replicate_stability, mean)
means2
plot(means_si_3days)
means_si_3days <- sapply(replicate_stability, mean)
means_si_3days
plot(means_si_3days)
source("C:/Users/marce/Documents/Repos/microbiome-help/microbiome_helper_functions.R")
biogas <- read_xlsx(path = "C:/Users/marce/OneDrive/Sci/DiversidadH2/Análisis/0_datos/alta_diversidad.xlsx", sheet = "biogas", range = "A68:O129")
colnames(biogas) <- c("tiempo", "fecha", "semana", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12")
head(biogas)
biogas_by_cases <- gather(biogas, "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12",
key = "replicate", value = "biogas_ml")
head(biogas_by_cases)
# Subsetting only biogas production data
replicate_data_biogas <- biogas[,4:15]
replicate_data_biogas
# Calculating HPSI for each replicate
means <- sapply(replicate_data_biogas, mean)
std_dev <- sapply(replicate_data_biogas, sd)
stability <- 1-(std_dev/means)
stability
data.frame(means, std_dev, stability, row.names = colnames(replicate_data_biogas))
# Stability of the whole treatment
mean(stability)
replicate_stability <- stability_per_period(replicate_data = replicate_data_biogas, period_length = 3)
replicate_stability
# Calculating the mean 3-consecutive-days stability for each replicate.
means_si_3days <- sapply(replicate_stability, mean)
means_si_3days
plot(means_si_3days)
library(readr)
Metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv")
View(Metadata)
library(readr)
metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv")
View(metadata)
t(metadata)
metadata <- t(metadata)
View(metadata)
metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv", col_names = FALSE)
metadata <- t(metadata)
View(metadata)
colnames(metadata) <- metadata[1]
colnames(metadata) <- metadata[1,]
View(metadata)
metadata <- metadata[2:nrow(metadata)]
metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv", col_names = FALSE)
metadata <- t(metadata)
colnames(metadata) <- metadata[1,]
metadata <- metadata[2:nrow(metadata),]
View(metadata)
metadata <- metadata[2:nrow(metadata)-10,]
metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv", col_names = FALSE)
metadata <- t(metadata)
colnames(metadata) <- metadata[1,]
metadata <- metadata[2:(nrow(metadata)-10),]
View(metadata)
rownames(metadata) <- metadata[,1]
View(metadata)
metadata[1] <- NULL
View(metadata)
metadata[,-1]
metadata <- metadata[,-1]
View(metadata)
lirbary(dplyr)
library(dplyr)
filter(metadata, ATTRIBUTE_Depth_Range == "0-30")
metadata <- tibble(metadata[,-1])
filter(metadata, ATTRIBUTE_Depth_Range == "0-30")
metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv", col_names = FALSE)
metadata <- t(metadata)
colnames(metadata) <- metadata[1,]
metadata <- metadata[2:(nrow(metadata)-10),]
rownames(metadata) <- metadata[,1]
metadata <- tibble(metadata[,-1])
View(metadata)
metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv", col_names = FALSE)
metadata <- t(metadata)
colnames(metadata) <- metadata[1,]
metadata <- metadata[2:(nrow(metadata)-10),]
rownames(metadata) <- metadata[,1]
metadata <- data.frame(metadata[,-1])
View(metadata)
filter(metadata, ATTRIBUTE_Depth_Range == "0-30")
metadata_surface <- filter(metadata, ATTRIBUTE_Depth_Range == "0-30")
arrange(metadata_surface, ATTRIBUTE_Location)
metadata_surface <- filter(metadata, ATTRIBUTE_Depth <= 30)
View(metadata_surface)
arrange(metadata_surface, ATTRIBUTE_Location)
arrange(metadata_surface, ATTRIBUTE_Location)
View(metadata_surface)
metadata_surface <- filter(metadata, ATTRIBUTE_Depth == "0-30")
arrange(metadata_surface, ATTRIBUTE_Location)
metadata_surface <- filter(metadata, ATTRIBUTE_Depth_Range == "0-30")
arrange(metadata_surface, ATTRIBUTE_Location)
View(metadata_surface)
metadata_surface <- metadata %>%
filter(ATTRIBUTE_Depth_Range == "0-30")
View(metadata_surface)
getDataFromTable <- function(data_path){
dataTable <- readr::read_csv(data_path, col_names = FALSE)
dataTable <- t(dataTable)
colnames(dataTable) <- dataTable[1,]
dataTable <- dataTable[2:(nrow(dataTable)-10),]
rownames(dataTable) <- dataTable[,1]
return(data.fram(dataTable[,-1]))
}
getDataFromTable("C:/Users/marce/Desktop/Metadata.csv")
getDataFromTable <- function(data_path){
dataTable <- readr::read_csv(data_path, col_names = FALSE)
dataTable <- t(dataTable)
colnames(dataTable) <- dataTable[1,]
dataTable <- dataTable[2:(nrow(dataTable)-10),]
rownames(dataTable) <- dataTable[,1]
return(data.frame(dataTable[,-1]))
}
getDataFromTable("C:/Users/marce/Desktop/Metadata.csv")
meta <- getDataFromTable("C:/Users/marce/Desktop/Metadata.csv")
View(meta)
metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv", col_names = FALSE)
metadata <- t(metadata)
colnames(metadata) <- metadata[1,]
View(metadata)
View(metadata)
getDataFromTable <- function(data_path, num_vars_toDrop = 0, extra_vars = 0){
dataTable <- readr::read_csv(data_path, col_names = FALSE)
dataTable <- t(dataTable)
colnames(dataTable) <- dataTable[1,]
dataTable <- dataTable[(2+extra_vars):(nrow(dataTable)-num_vars_toDrop),]
rownames(dataTable) <- dataTable[,1]
return(data.frame(dataTable[,-1]))
}
meta <- getDataFromTable("C:/Users/marce/Desktop/Metadata.csv", num_vars_toDrop = 10, extra_vars = 0)
View(meta)
meta <- getDataFromTable("C:/Users/marce/Desktop/Metadata.csv", num_vars_toDrop = 10, extra_vars = 1)
View(meta)
getDataFromTable <- function(data_path, num_vars_toDrop = 0, extra_vars = 0){
dataTable <- readr::read_csv(data_path, col_names = FALSE)
dataTable <- t(dataTable)
colnames(dataTable) <- dataTable[1,]
dataTable <- dataTable[(2+extra_vars):(nrow(dataTable)-num_vars_toDrop),]
rownames(dataTable) <- dataTable[,1]
return(data.frame(dataTable[,-1]))
}
meta <- getDataFromTable("C:/Users/marce/Desktop/Metadata.csv", num_vars_toDrop = 10, extra_vars = 1)
View(meta)
getDataFromTable <- function(data_path, num_vars_toDrop = 0, extra_vars = 0){
dataTable <- readr::read_csv(data_path, col_names = FALSE)
dataTable <- t(dataTable)
colnames(dataTable) <- dataTable[1,]
dataTable <- dataTable[(2+extra_vars):(nrow(dataTable)-num_vars_toDrop),]
rownames(dataTable) <- dataTable[,1]
return(data.frame(dataTable[,-1]))
}
meta <- getDataFromTable("C:/Users/marce/Desktop/Metadata.csv", num_vars_toDrop = 10, extra_vars = 1)
metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv", col_names = FALSE)
metadata <- t(metadata)
colnames(metadata) <- metadata[1,]
View(metadata)
metadata <- metadata[2:(nrow(metadata)-10),]
View(metadata)
View(metadata)
metadata <- read_csv("C:/Users/marce/Desktop/Metadata.csv", col_names = FALSE)
metadata <- t(metadata)
colnames(metadata) <- metadata[1,]
View(metadata)
metadata <- metadata[3:(nrow(metadata)-10),]
View(metadata)
View(metadata)
meta <- getDataFromTable("C:/Users/marce/Desktop/Metadata.csv", vars_toDrop_beg = 0, vars_toDrop_end = 10)
getDataFromTable <- function(data_path, vars_toDrop_beg = 0, vars_toDrop_end = 0){
dataTable <- readr::read_csv(data_path, col_names = FALSE)
dataTable <- t(dataTable)
colnames(dataTable) <- dataTable[1,]
dataTable <- dataTable[(2+extra_vars):(nrow(dataTable)-num_vars_toDrop),]
rownames(dataTable) <- dataTable[,1]
return(data.frame(dataTable[,-1]))
}
meta <- getDataFromTable("C:/Users/marce/Desktop/Metadata.csv", vars_toDrop_beg = 0, vars_toDrop_end = 10)
getDataFromTable <- function(data_path, vars_toDrop_beg = 0, vars_toDrop_end = 0){
dataTable <- readr::read_csv(data_path, col_names = FALSE)
dataTable <- t(dataTable)
colnames(dataTable) <- dataTable[1,]
dataTable <- dataTable[(2+vars_toDrop_beg):(nrow(dataTable)-vars_toDrop_end),]
rownames(dataTable) <- dataTable[,1]
return(data.frame(dataTable[,-1]))
}
meta <- getDataFromTable("C:/Users/marce/Desktop/Metadata.csv", vars_toDrop_beg = 0, vars_toDrop_end = 10)
View(meta)
load("~/Repos/coding_task/data/ASV_16S.csv")
library(readr)
ASV_16S <- read_csv("Repos/coding_task/data/ASV_16S.csv")
View(ASV_16S)
#######################################################
group_by(ASV_16S, Genus16S)
library(dplyr)
#######################################################
group_by(ASV_16S, Genus16S)
#######################################################
test1 <- group_by(ASV_16S, Genus16S)
View(test1)
#######################################################
test1 <- group_by(ASV_16S, Genus16S)
test1 <- ASV_16S %>%
group_by(Genus16Sl) %>%
summarise_all(funs(sum))
test1 <- ASV_16S %>%
group_by(Genus16S) %>%
summarise_all(funs(sum))
View(test1)
ASV_16S_genus <- ASV_16S[, 2:ncol(ASV_16S)]
View(ASV_16S_genus)
ASV_16S_genus <- ASV_16S[, 2:(ncol(ASV_16S)-8)]
View(ASV_16S_genus)
ASV_16S_genus <- cbind(ASV_16S[1], ASV_16S_genus)
View(ASV_16S_genus)
ASV_16S <- read_csv("Repos/coding_task/data/ASV_16S.csv")
ASV_16S_genus <- ASV_16S[, 2:(ncol(ASV_16S)-8)]
ASV_16S_genus <- cbind(ASV_16S["Genus16S"], ASV_16S_genus)
View(ASV_16S_genus)
test1 <- ASV_16S_genus %>%
group_by(Genus16S) %>%
summarise_all(funs(sum))
View(ASV_16S)
View(test1)
##### Correlation between 16s AVSs and metabolites #####
##########################################################################################
ASV_16S <- read_csv("Repos/coding_task/data/ASV_16S.csv")
ASV_16S_genus <- ASV_16S[, 2:(ncol(ASV_16S)-8)]
ASV_16S_genus <- cbind(ASV_16S["Genus16S"], ASV_16S_genus)
ASV_16S_genus <- ASV_16S_genus %>%
group_by(Genus16S) %>%
summarise_all(funs(sum))
View(ASV_16S_genus)
# Check that row names in both DFs are the same
row.names(asv_16s) == row.names(metabolites)
# Check that row names in both DFs are the same
row.names(ASV_16S_genus) == row.names(metabolites)
library(dplyr)
library(vegan)
library(ggplot2)
# Set working directory
setwd("C:/Users/marce/Documents/Repos/coding_task/data")
source("C:/Users/marce/Documents/Repos/coding_task/code/helper_functions.R")
##### Read and set up metadata DataFrame #####
##########################################################################################
metadata <- getDataFromTable("Metadata.csv", vars_toDrop_beg = 0, vars_toDrop_end = 10)
# Convert ATTRIBUTE_Depth to numeric
metadata <-transform(metadata, ATTRIBUTE_Depth = as.numeric(ATTRIBUTE_Depth))
# Create new variable (sample_name) that includes cycle + day + depth information
metadata <- mutate(metadata, sample_name = paste(ATTRIBUTE_Location, ATTRIBUTE_Depth, sep = "_"))
# Select only surface samples (Depth <= 30)
metadata_surface <- metadata %>%
transform(ATTRIBUTE_Depth = as.numeric(ATTRIBUTE_Depth)) %>%
filter(ATTRIBUTE_Depth_Range == "0-30") %>%
arrange(ATTRIBUTE_Location, ATTRIBUTE_Depth)
##### Read metabolites data #####
##########################################################################################
# Load data
metabolites <- getDataFromTable("Metabolites_Feature Table.csv", vars_toDrop_beg = 2, vars_toDrop_end = 0)
# Convert char variables into numeric without loosing DF structure
metabolites <- convert_all_cols_to_numeric(metabolites)
metabolites <- metabolites * 100000
metabolites <- mutate_all(metabolites, round)
metabolites <- mutate_if(metabolites, is.numeric, list(~ifelse(is_less_than_value(., 10), 0, .)))
# Extract surface samples in cycle-day-depth order
surface_metabolites <- metabolites[row.names(metadata_surface),]
# Check samples are in same order
row.names(surface_metabolites) == row.names(metadata_surface)
View(metabolites)
View(ASV_16S_genus)
View(metabolites)
View(metabolites)
# Check that row names in both DFs are the same
row.names(ASV_16S_genus) == row.names(metabolites)
# Extract samples present in ASVs tables
metabolites <- metabolites[row.names(asv_16s),]
# Load data
asv_16s <- getDataFromTable("ASV_16S.csv", vars_toDrop_beg = 0, vars_toDrop_end = 8)
# Convert char variables into numeric without loosing DF structure
asv_16s <- convert_all_cols_to_numeric(asv_16s)
# Extract samples present in ASVs tables
metabolites <- metabolites[row.names(asv_16s),]
# Check that row names in both DFs are the same
row.names(ASV_16S_genus) == row.names(metabolites)
View(metabolites)
View(ASV_16S_genus)
ASV_16S_genus <- t(ASV_16S_genus)
View(ASV_16S_genus)
ASV_16S_genus <- data.frame(t(ASV_16S_genus))
View(ASV_16S_genus)
View(ASV_16S_genus)
##### Correlation between 16s AVSs and metabolites #####
##########################################################################################
ASV_16S <- read_csv("Repos/coding_task/data/ASV_16S.csv")
ASV_16S_genus <- ASV_16S[, 2:(ncol(ASV_16S)-8)]
ASV_16S_genus <- cbind(ASV_16S["Genus16S"], ASV_16S_genus)
ASV_16S_genus <- ASV_16S_genus %>%
group_by(Genus16S) %>%
summarise_all(funs(sum))
ASV_16S_genus <- data.frame(t(ASV_16S_genus))
##### Correlation between 16s AVSs and metabolites #####
##########################################################################################
ASV_16S <- read_csv("Repos/coding_task/data/ASV_16S.csv")
##### Correlation between 16s AVSs and metabolites #####
##########################################################################################
ASV_16S <- read_csv("ASV_16S.csv")
ASV_16S_genus <- ASV_16S[, 2:(ncol(ASV_16S)-8)]
ASV_16S_genus <- cbind(ASV_16S["Genus16S"], ASV_16S_genus)
ASV_16S_genus <- ASV_16S_genus %>%
group_by(Genus16S) %>%
summarise_all(funs(sum))
ASV_16S_genus <- data.frame(t(ASV_16S_genus))
View(ASV_16S_genus)
colnames(ASV_16S_genus) <- ASV_16S_genus[1,]
View(ASV_16S_genus)
ASV_16S_genus <- ASV_16S_genus[2:,]
ASV_16S_genus <- ASV_16S_genus[2:nrow(ASV_16S_genus),]
View(ASV_16S_genus)
# Check that row names in both DFs are the same
row.names(ASV_16S_genus) == row.names(metabolites)
cor_table <- cor(ASV_16S_genus, metabolites, method = "pearson")
source("C:/Users/marce/Documents/Repos/coding_task/code/helper_functions.R")
ASV_16S_genus <- convert_all_cols_to_numeric(ASV_16S_genus)
View(ASV_16S_genus)
source("C:/Users/marce/Documents/Repos/coding_task/code/helper_functions.R")
View(ASV_16S_genus)
ASV_16S_genus <- convert_all_cols_to_numeric(ASV_16S_genus)
rownames(ASV_16S_genus)
colnames(ASV_16S_genus)
source("C:/Users/marce/Documents/Repos/coding_task/code/helper_functions.R")
ASV_16S_genus <- convert_all_cols_to_numeric(ASV_16S_genus)
source("C:/Users/marce/Documents/Repos/coding_task/code/helper_functions.R")
ASV_16S_genus <- convert_all_cols_to_numeric(ASV_16S_genus)
source("C:/Users/marce/Documents/Repos/coding_task/code/helper_functions.R")
ASV_16S_genus <- convert_all_cols_to_numeric(ASV_16S_genus)
# Check that row names in both DFs are the same
row.names(ASV_16S_genus) == row.names(metabolites)
cor_table <- cor(ASV_16S_genus, metabolites, method = "pearson")
typeof(ASV_16S_genus)
sapply(ASV_16S_genus, class)
ASV_16S_genus[158]
ASV_16S_genus[NA]
##### Correlation between 16s AVSs and metabolites #####
##########################################################################################
ASV_16S <- read_csv("ASV_16S.csv")
ASV_16S_genus <- ASV_16S[, 2:(ncol(ASV_16S)-8)]
ASV_16S_genus <- cbind(ASV_16S["Genus16S"], ASV_16S_genus)
ASV_16S_genus <- ASV_16S_genus %>%
group_by(Genus16S) %>%
summarise_all(funs(sum))
View(ASV_16S_genus)
ASV_16S_genus <- data.frame(t(ASV_16S_genus[1:157,]))
colnames(ASV_16S_genus) <- ASV_16S_genus[1,]
ASV_16S_genus <- ASV_16S_genus[2:nrow(ASV_16S_genus),]
ASV_16S_genus <- convert_all_cols_to_numeric(ASV_16S_genus)
# Check that row names in both DFs are the same
row.names(ASV_16S_genus) == row.names(metabolites)
cor_table <- cor(ASV_16S_genus, metabolites, method = "pearson")
View(cor_table)
cor_table_small <- cor_table[0:100, 0:100]
heatmap(cor_table_small)
heatmap(cor_table_small)
View(ASV_16S_genus)
edges_genus <- data.frame(row=rownames(cor_table_small)[row(cor_table_small)], col=colnames(cor_table_small)[col(cor_table_small)], corr=c(cor_table_small))
View(edges_genus)
View(cor_table_small)
View(edges_genus)
write.csv(edges_genus)
write.csv(edges_genus, "edges_genus.csv")
write.csv(edges_genus, "edges_genus.csv", row.names = FALSE)
View(edges_genus)
View(cor_table_small)
c(cor_table_small)
c(cor_table_small)
View(edges_genus)
row(cor_table_small
)
col(cor_table_small)
row(cor_table_small)
rownames(cor_table_small)[row(cor_table_small)]
rownames(cor_table_small)
# Now lets use dplyr to collapse (group_by)
ASV_16S_genus <- ASV_16S_genus %>%
group_by(Genus16S) %>%
summarise_all(funs(sum))
# Remove IDs column. This cannot be collapsed because it is type char.
ASV_16S_genus <- ASV_16S[, 2:(ncol(ASV_16S)-8)]
# Lets put genus as first column that serve as IDs.
# At this point several ASVs will have repeated Genus IDs
ASV_16S_genus <- cbind(ASV_16S["Genus16S"], ASV_16S_genus)
# Now lets use dplyr to collapse (group_by)
ASV_16S_genus <- ASV_16S_genus %>%
group_by(Genus16S) %>%
summarise_all(funs(sum))
# Load data
asv_16s <- getDataFromTable("ASV_16S.csv", vars_toDrop_beg = 0, vars_toDrop_end = 8)
# Convert char variables into numeric without loosing DF structure
asv_16s <- convert_all_cols_to_numeric(asv_16s)
# Extract surface samples in cycle-day-depth order
surface_asv16s <- asv_16s[row.names(metadata_surface),]
# Check samples are in same order
row.names(surface_asv16s) == row.names(metadata_surface)
# Get dataframe with metadata and chao1 index information to plot
surface_alpha_diversity_asv16s <- get_alpha_diversity(dataframe = surface_asv16s, metadata_df = metadata_surface, useful_metadata_cols = c("ATTRIBUTE_Location", "sample_name", "ATTRIBUTE_Filament_Possition"))
##### MDS/PCoA of surface samples using BrayCurtis distance #####
##########################################################################################
# 16s AVSs =================================
surface_bray_asv16s <- vegan::vegdist(surface_asv16s, method = "bray")
surface_bray_asv16s
airquality
transform(airquality, Ozone = -Ozone)
View(metadata_surface)
